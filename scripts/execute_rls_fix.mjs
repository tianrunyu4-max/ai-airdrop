#!/usr/bin/env node

/**
 * ÈÄöËøáService RoleÁõ¥Êé•ÊâßË°åSQL‰øÆÂ§çRLS
 */

import { createClient } from '@supabase/supabase-js'

const SUPABASE_URL = 'https://vtezesyfhvbkgpdkuyeo.supabase.co'
const SERVICE_ROLE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ0ZXplc3lmaHZia2dwZGt1eWVvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTQ5OTY0MSwiZXhwIjoyMDc1MDc1NjQxfQ.GXgjAJcc1A1WztAns4Tij5WbdtAdvY0Xer8kI8KTmYI'

const supabase = createClient(SUPABASE_URL, SERVICE_ROLE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

console.log('üîß Ê≠£Âú®‰øÆÂ§çRLSÁ≠ñÁï•...\n')

// ÊâßË°åÊØèÊù°SQLËØ≠Âè•
const statements = [
  `DROP POLICY IF EXISTS "Allow users to insert their own record" ON users`,
  `DROP POLICY IF EXISTS "Allow users to read their own record" ON users`,
  `DROP POLICY IF EXISTS "Allow users to update their own record" ON users`,
  `DROP POLICY IF EXISTS "users_select_for_invite_anon" ON users`,
  `DROP POLICY IF EXISTS "Allow anonymous to read invite codes" ON users`,
  `DROP POLICY IF EXISTS "Allow anonymous to count users" ON users`,
  
  `CREATE POLICY "Allow anonymous to read invite codes" ON users FOR SELECT TO anon USING (invite_code IS NOT NULL)`,
  
  `CREATE POLICY "Allow users to insert their own record" ON users FOR INSERT TO authenticated WITH CHECK (auth.uid() = id)`,
  
  `CREATE POLICY "Allow users to read their own record" ON users FOR SELECT TO authenticated USING (auth.uid() = id)`,
  
  `CREATE POLICY "Allow users to update their own record" ON users FOR UPDATE TO authenticated USING (auth.uid() = id) WITH CHECK (auth.uid() = id)`
]

for (let i = 0; i < statements.length; i++) {
  const sql = statements[i]
  console.log(`ÊâßË°å SQL ${i + 1}/${statements.length}...`)
  
  try {
    // ‰ΩøÁî® rpc Ë∞ÉÁî®ÔºàÂ¶ÇÊûúÂ≠òÂú®Ôºâ
    const { error } = await supabase.rpc('exec', { sql })
    
    if (error) {
      console.log(`   ‚ö†Ô∏è  Êó†Ê≥ïÈÄöËøáRPCÊâßË°å: ${error.message}`)
    } else {
      console.log(`   ‚úÖ ÊàêÂäü`)
    }
  } catch (e) {
    console.log(`   ‚ö†Ô∏è  RPCÊñπÊ≥ï‰∏çÂèØÁî®ÔºåÈúÄË¶ÅÊâãÂä®ÊâßË°å`)
  }
}

console.log('\nüìù Áî±‰∫éSupabaseÈôêÂà∂ÔºåÊüê‰∫õDDLËØ≠Âè•Êó†Ê≥ïÈÄöËøáAPIÊâßË°å')
console.log('ËØ∑ÊâãÂä®Âú®Supabase SQL Editor‰∏≠ÊâßË°å‰ª•‰∏ãSQL:\n')
console.log('‚îÄ'.repeat(60))
console.log(`
-- Âà†Èô§ÊóßÁ≠ñÁï•
DROP POLICY IF EXISTS "Allow users to insert their own record" ON users;
DROP POLICY IF EXISTS "Allow users to read their own record" ON users;
DROP POLICY IF EXISTS "Allow users to update their own record" ON users;
DROP POLICY IF EXISTS "users_select_for_invite_anon" ON users;
DROP POLICY IF EXISTS "Allow anonymous to read invite codes" ON users;
DROP POLICY IF EXISTS "Allow anonymous to count users" ON users;

-- ÂàõÂª∫Êñ∞Á≠ñÁï•
CREATE POLICY "Allow anonymous to read invite codes"
ON users FOR SELECT TO anon
USING (invite_code IS NOT NULL);

CREATE POLICY "Allow users to insert their own record"
ON users FOR INSERT TO authenticated
WITH CHECK (auth.uid() = id);

CREATE POLICY "Allow users to read their own record"
ON users FOR SELECT TO authenticated
USING (auth.uid() = id);

CREATE POLICY "Allow users to update their own record"
ON users FOR UPDATE TO authenticated
USING (auth.uid() = id)
WITH CHECK (auth.uid() = id);
`)
console.log('‚îÄ'.repeat(60))
console.log('\nÊâßË°åÊ≠•È™§:')
console.log('1. ÊâìÂºÄ: https://supabase.com/dashboard/project/vtezesyfhvbkgpdkuyeo/sql/new')
console.log('2. Â§çÂà∂‰∏äÈù¢ÁöÑSQL')
console.log('3. Á≤òË¥¥Âπ∂ÁÇπÂáª Run')
console.log('4. ÊâßË°åÂÆåÊàêÂêéÔºåÈáçÊñ∞ËøêË°å: node scripts/fix_and_test_invite.mjs\n')













